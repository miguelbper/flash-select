[project]
name = "flash-select"
dynamic = ["version"]  # Version is managed by git tags
description = "An extremely fast feature selection algorithm."
readme = "README.md"
authors = [
    { name = "Miguel Pereira", email = "miguel.b.per@gmail.com" }
]

requires-python = ">=3.10"

dependencies = [
    "numpy>=2.0.0",
    "pandas>=2.0.0",
    "scipy>=1.0.0",
    "shap>=0.47.0",
]

[dependency-groups]
dev = [
    "hypothesis>=6.137.1",
    "polars>=1.0.0",
    "pre-commit>=4.2.0", # Git hooks for code quality
    "pyright>=1.1.403", # Static type checker
    "pytest>=8.4.1", # Testing framework
    "pytest-cov>=6.2.1", # Test coverage reporting
    "ruff>=0.12.7", # Linter and formatter
    "xgboost>=3.0.3",
]

# ------------------------------------------------------------------------------
# Build
# ------------------------------------------------------------------------------

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/flash_select"]

# Version management using git tags
[tool.hatch.version]
source = "vcs"

# https://docs.astral.sh/uv/concepts/projects/config/#project-packaging
# will force a project to be built and installed into the project environment
[tool.uv]
package = true


# ------------------------------------------------------------------------------
# Linting
# ------------------------------------------------------------------------------

[tool.ruff]
line-length = 120

# Set of rules taken from https://docs.astral.sh/ruff/linter/#rule-selection
[tool.ruff.lint]
select = [
    "E",   # pycodestyle - Python style guide
    "F",   # Pyflakes - Python linter
    "I",   # isort - Import sorting
    "B",   # flake8-bugbear - Bug detection
    "UP",  # pyupgrade - Python upgrade tool
    "SIM", # flake8-simplify - Code simplification
]

# Tell Ruff/isort that flash_select is first party, so that it puts it last in the imports
[tool.ruff.lint.isort]
known-first-party = ["flash_select"]
